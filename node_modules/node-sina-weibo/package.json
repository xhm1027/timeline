{
  "name": "node-sina-weibo",
  "description": "Sina Weibo API client for node.js",
  "version": "0.0.9",
  "author": {
    "name": "Sam X. Xu",
    "email": "samxxu@gmail.com"
  },
  "main": "./lib/index",
  "keywords": [
    "sina weibo",
    "weibo",
    "oauth2"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/samxxu/node-sina-weibo.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "devDependencies": {
    "mocha": ">=0.7.0",
    "should": ">=0.4.2"
  },
  "dependencies": {
    "oauth": "0.9.8",
    "request": "2.11.1",
    "form-data": "0.0.3"
  },
  "engines": {
    "node": "*"
  },
  "readme": "A simple [node.js](http://nodejs.org) OAuth2 client for Sina Weibo API. It is designed to be a low level SDK to gain flexibility and stability.\n\nWithout any wrapper APIs, it's like a mirror to the server side APIs. All you need to do is to read the [Sina Weibo API](http://open.weibo.com/wiki/API%E6%96%87%E6%A1%A3_V2) and follow the examples below.\n\nIf you want some more graceful and comfortable APIs, like: weibo.getUserDetail(), weibo.update() and etc, you can wrap it with your own Class.\n\n\n## Introduction in Chinese\n\n这是一个简单的基于OAuth2的[node.js](http://nodejs.org)新浪微博API客户端。\n\n它定位于一个底层SDK，以保持其调用的灵活性及接口的稳定性。\n\n它像是一个服务器端API的镜像，没有对接口进行自己的封装，你只需要阅读 [新浪微博的API](http://open.weibo.com/wiki/API%E6%96%87%E6%A1%A3_V2)，并参考下面的例子便可成功调用。\n\n如果你想要用更为优雅的接口，例如：weibo.getUserDetail(), weibo.update() 等等，你可以自己封装一些你要用的API到你自己的Wrapper类中。\n\n欢迎在微博上与我沟通[@VM-SAM](http://weibo.com/pandasam)\n\n## Example\n\n    var weibo = new SinaWeibo(clientId, clientSecret, accessToken);\n\n    weibo.GET('users/show',{uid:'1564554685'}, function (err, resultInJson, response) {\n        if (err) return callback(err);\n        // do something with resultInJson\n    });\n\n## Example 2: The SPECIAL api - Upload\nUpload in node-sina-weibo is special, a files object is separated from the params object.\n\n文件上传的情况在比较特殊，params参数对象分离出了一个files参数\n\n    weibo.UPLOAD('statuses/upload',\n        { status:'your content' }, { pic:'pathToYourPicture' }, function (err, resultInJson, response) {\n            if (err) return callback(err);\n            // do something with resultInJson\n        }\n    );\n\n## A Typical Authorization Example\n\nFor more details, please refer to [Sina Weibo Authorization Documentation](http://open.weibo.com/wiki/%E6%8E%88%E6%9D%83%E6%9C%BA%E5%88%B6%E8%AF%B4%E6%98%8E)\n\n请参阅[新浪微博授权机制说明](http://open.weibo.com/wiki/%E6%8E%88%E6%9D%83%E6%9C%BA%E5%88%B6%E8%AF%B4%E6%98%8E)\n\n### Step 1 : Get the Authorize Url\n\n    var weibo = new SinaWeibo(clientId, clientSecret);\n\n    var url = weibo.getAuthorizeUrl({\n        redirect_uri:'http://your-website.com/callback',\n        response_type:'code'\n    });\n\nA code will be provided to the http://your-website.com/callback?code=the-code-you-get.\n\n### Step 2 : Get the Access Token with the code got in step 1\n\n    weibo.getAccessToken({\n            code:'the-code-got-in-step-1',\n            grant_type:'authorization_code',\n            redirect_uri:'http://your-website.com/callback'\n        }, function (err, result, accessToken) {\n            if (err) return callback(err);\n            // your code here.\n            // weibo.GET(...)\n        }\n    );\n\n\n##Installation\n\n    $ npm install node-sina-weibo\n\n",
  "readmeFilename": "README.md",
  "_id": "node-sina-weibo@0.0.9",
  "dist": {
    "shasum": "57f492cfe7f1765878b3ce999fadc92ddacc0fa1"
  },
  "_from": "node-sina-weibo@*"
}
